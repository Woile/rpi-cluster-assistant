#cloud-config
# vim: syntax=yaml
#

# The current version of cloud-init in the Hypriot rpi-64 is 0.7.9
# When dealing with cloud-init, it is SUPER important to know the version
# I have wasted many hours creating servers to find out the module I was
# trying to use wasn't in the cloud-init version I had
# Documentation: http://cloudinit.readthedocs.io/en/0.7.9/index.html

# Set your hostname here, the manage_etc_hosts will update the hosts file entries as well
hostname: dummy
manage_etc_hosts: true
apt_preserve_sources_list: true

# You could modify this for your own user information
users:
  - name: ${USERNAME}
    gecos: "Grrrrr"
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    primary-group: users
    groups: users,docker,adm,dialout,audio,plugdev,netdev,video
    plain_text_passwd: hypriot
    ssh-import-id: None
    lock_passwd: false
    ssh_pwauth: true
    chpasswd: { expire: false }
    ssh-authorized-keys:
      - ${SSH_PUBLIC_KEY}

# # Set the locale of the system
locale: "en_US.UTF-8"

# # Set the timezone
# # Value of 'timezone' must exist in /usr/share/zoneinfo
timezone: "${TIMEZONE}"

# Update apt packages on first boot
package_update: true
package_upgrade: true
package_reboot_if_required: true

# # Install any additional apt packages you need here
packages:
 - ntp
 - isc-dhcp-server
 - vim
 - apt-transport-https
 - curl
#  - ufw

# # WiFi connect to HotSpot
# To make wifi work with RPi3 and RPi0
# you also have to set "enable_uart=0" in config.txt
# See no-uart-config.txt for an example.
#
# # - use `wpa_passphrase SSID PASSWORD` to generate the psk
write_files:
  - content: |
      allow-hotplug wlan0
      iface wlan0 inet dhcp
      wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
      iface default inet dhcp
    path: /etc/network/interfaces.d/wlan0
  - content: |
      country=${WIFI_COUNTRY}
      ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
      update_config=1
      network={
      ssid="${WIFI_SSID_NAME}"
      ${WIFI_PASSWORD}
      proto=RSN
      key_mgmt=WPA-PSK
      pairwise=CCMP
      auth_alg=OPEN
      }
    path: /etc/wpa_supplicant/wpa_supplicant.conf
  - content: |
      allow-hotplug eth0
      iface eth0 inet static
      address 10.0.0.1
      netmask 255.255.255.0
      broadcast 10.0.0.255
      gateway 10.0.0.1
    path: /etc/network/interfaces.d/eth0
  - content: |
      option domain-name "cluster.home"; # Set a domain name, can be anything
      option domain-name-servers 8.8.8.8, 8.8.4.4; # Use Google DNS by default, you can substitute ISP-supplied values here
      subnet 10.0.0.0 netmask 255.255.255.0 { # We'll use 10.0.0.X for our subnet
          range 10.0.0.1 10.0.0.50;
          option subnet-mask 255.255.255.0;
          option broadcast-address 10.0.0.255;
          option routers 10.0.0.1;
      }
      default-lease-time 600;
      max-lease-time 7200;
      authoritative;
    path: /etc/dhcp/dhcpd.conf

  - content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }
    path: /etc/docker/daemon.json
    #$WRITE_FILES

# These commands will be ran once on first boot only
runcmd:
  # Pickup the hostname changes
  - 'systemctl restart avahi-daemon'

  # Activate WiFi interface
  - 'ifup wlan0'

  # Only move stuff to SWAP when you are completely OUT of RAM.
  - 'echo vm.swappiness=0 | tee -a /etc/sysctl.conf'

  # Disable swap
  - 'swapoff -a'

  # Disabled after a reboot
  - sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

  # Configure interface of isc dhcp server
  - sed -e '/INTERFACESv6=/ s/^#*/#/' -e 's/INTERFACESv4=""/INTERFACESv4="eth0"/g' -i /etc/default/isc-dhcp-server

  # Disable dhcpcd in favor of isc-dhcp-server
  - 'systemctl disable dhcpcd.service'
  - 'systemctl stop dhcpcd.service'

  # Configure docker
  - 'mkdir -p /etc/systemd/system/docker.service.d'

  # Configuration for pod network plugin
  - 'sysctl net.bridge.bridge-nf-call-iptables=1'

  # Reboot system
  - reboot
